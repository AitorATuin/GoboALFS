#!/bin/bash

function PatchBLFSScript() {
    local buildScript="$1"
    local appName=$(basename "$buildScript" | sed 's,\([^-]*\)-\([^-]*\)-\(.*\),\3,g')
    local appVersion=$(grep "^PACKAGE=" "$buildScript" | cut -d= -f2 | sed 's,\(.*\)-\(.*\).tar.*,\2,g')

    # Prevent double-patching when running this script twice
    if grep -q "gobolinux" "$buildScript"
    then
        return
    fi

    # Update paths
    perl -pi -e "s,make -j1 install,make -j1 install DESTDIR=/tmp/$appName,g" "$buildScript"
    perl -pi -e "s,/usr/,/tmp/$appName/usr/,g" "$buildScript"
    perl -pi -e "s,/etc/,/tmp/$appName/etc/,g" "$buildScript"
    perl -pi -e "s,/var/,/tmp/$appName/var/,g" "$buildScript"
    perl -pi -e "s,^sudo -E ,,g" "$buildScript"
    perl -pi -e "s,^sudo ,,g" "$buildScript"
    perl -pi -e "s,python setup.py install --prefix=/usr,python setup.py install --prefix=/tmp/$appName,g" "$buildScript"
    
    # Workaround: since installation prefix differs from /usr, we must ensure that some directories exist.
    # We also do not let libtool fail due to changes in the installation prefix.
    line1="mkdir -p /tmp/$appName/usr /tmp/$appName/var"
    line2="mkdir -p /tmp/$appName/etc/pam.d"
    line3="if test -e libtool; then perl -pi -e 's,func_fatal_error \\\"error: cannot install,echo \\\"error: cannot install,g' libtool; fi"
    perl -pi -e "if (!\$changed) { s%cd \\\$UNPACKDIR$%cd \\\$UNPACKDIR\n$line1\n$line2\n$line3% and \$changed=1; }" "$buildScript"

    # Scons
    perl -pi -e "s,scons PREFIX=/usr install,scons PREFIX=/tmp/$appName/usr install,g" "$buildScript"

    # Invoke the GoboLinux-ALFS "package manager" script in the last ROOT_EOF block
    line1="export PATH=/bin:/sbin:/tools/bin"
    line2="source /tools/bin/packInstall-gobolinux.sh"
    line3="PKGDIR=${appName}-${appVersion} PKG_DEST=/tmp/$appName packInstall"
    sed  -ri ":a;\$!{N;ba};s!^(.*\n?)^exit!\1$line1\n$line2\n$line3\nexit!" "$buildScript"

    # Special cases..
    case "$appName" in
        libffi)
            # 'make' on the root doesn't propagate to the subdir where 'install' is actually executed
            perl -pi -e "s,make -j1 install,make -j1 -C $(uname -m)-pc-linux-gnu install,g" "$buildScript"
            ;;
        apr)
            perl -pi -e "s,--with-installbuilddir=/tmp/apr,--with-installbuilddir=,g" "$buildScript"
            ;;
        python2)
            line1='sitepackages="/tmp/python2/usr/lib/python\$(echo \$PACKAGE | cut -d- -f2 | cut -d\. -f1-2)/site-packages"'
            line2='echo /System/Index/lib/python2.7/site-packages/ \> \$sitepackages/gobolinux.pth'
            line3='echo /System/Index/lib/python2.8/site-packages/ \> \$sitepackages/gobolinux.pth'
            perl -pi -e "s,packInstall-gobolinux.sh,packInstall-gobolinux.sh\n$line1\n$line2,g" "$buildScript"
            ;;
        openssl)
            perl -pi -e "s,MANDIR=/tmp/openssl/usr/share/man MANSUFFIX=ssl install,MANDIR=/usr/share/man MANSUFFIX=ssl INSTALL_PREFIX=/tmp/$appName install,g" "$buildScript"
            perl -pi -e "s,--openssldir=/tmp/openssl/etc/ssl,--openssldir=/etc/ssl,g" "$buildScript"
            ;;
        sudo)
            perl -pi -e "s,=/tmp/sudo/,=/,g" "$buildScript"
            ;;
        *) ;;
    esac
}

